// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type PipeDelimitedQueryParamsArrayRequest struct {
	ArrParam         []string          `queryParam:"style=pipeDelimited,explode=false,name=arrParam"`
	ArrParamExploded []int64           `queryParam:"style=pipeDelimited,explode=true,name=arrParamExploded"`
	MapParam         map[string]string `queryParam:"style=pipeDelimited,explode=false,name=mapParam"`
	// A simple object that uses all our supported primitive types and enums and has optional properties.
	ObjParam *shared.SimpleObject `queryParam:"style=pipeDelimited,explode=false,name=objParam"`
}

type PipeDelimitedQueryParamsArrayResArgs struct {
	ArrParam         string   `json:"arrParam"`
	ArrParamExploded []string `json:"arrParamExploded"`
}

// PipeDelimitedQueryParamsArrayRes - OK
type PipeDelimitedQueryParamsArrayRes struct {
	Args PipeDelimitedQueryParamsArrayResArgs `json:"args"`
	URL  string                               `json:"url"`
}

type PipeDelimitedQueryParamsArrayResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// OK
	Res *PipeDelimitedQueryParamsArrayRes
}
