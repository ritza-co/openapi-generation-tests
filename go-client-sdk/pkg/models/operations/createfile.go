// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type CreateFileRequestBodyFile struct {
	Content []byte `multipartForm:"content"`
	File    string `multipartForm:"name=file"`
}

func (o *CreateFileRequestBodyFile) GetContent() []byte {
	if o == nil {
		return []byte{}
	}
	return o.Content
}

func (o *CreateFileRequestBodyFile) GetFile() string {
	if o == nil {
		return ""
	}
	return o.File
}

type CreateFileRequestBody struct {
	File *CreateFileRequestBodyFile `multipartForm:"file"`
}

func (o *CreateFileRequestBody) GetFile() *CreateFileRequestBodyFile {
	if o == nil {
		return nil
	}
	return o.File
}

type CreateFileResponse struct {
	ContentType string
	// OK
	FileResource *shared.FileResource
	StatusCode   int
	RawResponse  *http.Response
}

func (o *CreateFileResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *CreateFileResponse) GetFileResource() *shared.FileResource {
	if o == nil {
		return nil
	}
	return o.FileResource
}

func (o *CreateFileResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *CreateFileResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
