// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type TypedObject3TypeEnum string

const (
	TypedObject3TypeEnumObj3 TypedObject3TypeEnum = "obj3"
)

func (e TypedObject3TypeEnum) ToPointer() *TypedObject3TypeEnum {
	return &e
}

func (e *TypedObject3TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "obj3":
		*e = TypedObject3TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for TypedObject3TypeEnum: %v", v)
	}
}

type TypedObject3 struct {
	Type  TypedObject3TypeEnum `json:"type"`
	Value string               `json:"value"`
}
