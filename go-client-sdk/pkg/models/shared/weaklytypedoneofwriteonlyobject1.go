// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"bytes"
	"encoding/json"
	"errors"
)

type WeaklyTypedOneOfWriteOnlyObject1Type string

const (
	WeaklyTypedOneOfWriteOnlyObject1TypeSimpleObject          WeaklyTypedOneOfWriteOnlyObject1Type = "simpleObject"
	WeaklyTypedOneOfWriteOnlyObject1TypeWriteOnlyObjectOutput WeaklyTypedOneOfWriteOnlyObject1Type = "writeOnlyObjectOutput"
)

type WeaklyTypedOneOfWriteOnlyObject1 struct {
	SimpleObject          *SimpleObject
	WriteOnlyObjectOutput *WriteOnlyObjectOutput

	Type WeaklyTypedOneOfWriteOnlyObject1Type
}

func CreateWeaklyTypedOneOfWriteOnlyObject1SimpleObject(simpleObject SimpleObject) WeaklyTypedOneOfWriteOnlyObject1 {
	typ := WeaklyTypedOneOfWriteOnlyObject1TypeSimpleObject

	return WeaklyTypedOneOfWriteOnlyObject1{
		SimpleObject: &simpleObject,
		Type:         typ,
	}
}

func CreateWeaklyTypedOneOfWriteOnlyObject1WriteOnlyObjectOutput(writeOnlyObjectOutput WriteOnlyObjectOutput) WeaklyTypedOneOfWriteOnlyObject1 {
	typ := WeaklyTypedOneOfWriteOnlyObject1TypeWriteOnlyObjectOutput

	return WeaklyTypedOneOfWriteOnlyObject1{
		WriteOnlyObjectOutput: &writeOnlyObjectOutput,
		Type:                  typ,
	}
}

func (u *WeaklyTypedOneOfWriteOnlyObject1) UnmarshalJSON(data []byte) error {
	var d *json.Decoder

	simpleObject := new(SimpleObject)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&simpleObject); err == nil {
		u.SimpleObject = simpleObject
		u.Type = WeaklyTypedOneOfWriteOnlyObject1TypeSimpleObject
		return nil
	}

	writeOnlyObjectOutput := new(WriteOnlyObjectOutput)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&writeOnlyObjectOutput); err == nil {
		u.WriteOnlyObjectOutput = writeOnlyObjectOutput
		u.Type = WeaklyTypedOneOfWriteOnlyObject1TypeWriteOnlyObjectOutput
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u WeaklyTypedOneOfWriteOnlyObject1) MarshalJSON() ([]byte, error) {
	if u.SimpleObject != nil {
		return json.Marshal(u.SimpleObject)
	}

	if u.WriteOnlyObjectOutput != nil {
		return json.Marshal(u.WriteOnlyObjectOutput)
	}

	return nil, nil
}
