// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"github.com/ericlagergren/decimal"
	"math/big"
	"openapi/pkg/types"
)

type ComplexNumberTypes struct {
	Bigint     *big.Int      `json:"bigint"`
	BigintStr  types.BigInt  `json:"bigintStr"`
	Decimal    types.Decimal `json:"decimal"`
	DecimalStr *decimal.Big  `json:"decimalStr"`
}

func (o *ComplexNumberTypes) GetBigint() *big.Int {
	if o == nil {
		return big.NewInt(0)
	}
	return o.Bigint
}

func (o *ComplexNumberTypes) GetBigintStr() types.BigInt {
	if o == nil {
		return types.BigInt{Int: *big.NewInt(0)}
	}
	return o.BigintStr
}

func (o *ComplexNumberTypes) GetDecimal() types.Decimal {
	if o == nil {
		return types.Decimal{Big: *(new(decimal.Big).SetFloat64(0.0))}
	}
	return o.Decimal
}

func (o *ComplexNumberTypes) GetDecimalStr() *decimal.Big {
	if o == nil {
		return new(decimal.Big).SetFloat64(0.0)
	}
	return o.DecimalStr
}
