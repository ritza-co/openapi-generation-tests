// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// EnumEnum - An string based enum
type EnumEnum string

const (
	EnumEnumOne   EnumEnum = "one"
	EnumEnumTwo   EnumEnum = "two"
	EnumEnumThree EnumEnum = "three"
)

func (e EnumEnum) ToPointer() *EnumEnum {
	return &e
}

func (e *EnumEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "one":
		fallthrough
	case "two":
		fallthrough
	case "three":
		*e = EnumEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for EnumEnum: %v", v)
	}
}
