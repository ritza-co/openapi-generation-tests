// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"bytes"
	"encoding/json"
	"errors"
)

type WeaklyTypedOneOfWriteOnlyObjectType string

const (
	WeaklyTypedOneOfWriteOnlyObjectTypeSimpleObject    WeaklyTypedOneOfWriteOnlyObjectType = "simpleObject"
	WeaklyTypedOneOfWriteOnlyObjectTypeWriteOnlyObject WeaklyTypedOneOfWriteOnlyObjectType = "writeOnlyObject"
)

type WeaklyTypedOneOfWriteOnlyObject struct {
	SimpleObject    *SimpleObject
	WriteOnlyObject *WriteOnlyObject

	Type WeaklyTypedOneOfWriteOnlyObjectType
}

func CreateWeaklyTypedOneOfWriteOnlyObjectSimpleObject(simpleObject SimpleObject) WeaklyTypedOneOfWriteOnlyObject {
	typ := WeaklyTypedOneOfWriteOnlyObjectTypeSimpleObject

	return WeaklyTypedOneOfWriteOnlyObject{
		SimpleObject: &simpleObject,
		Type:         typ,
	}
}

func CreateWeaklyTypedOneOfWriteOnlyObjectWriteOnlyObject(writeOnlyObject WriteOnlyObject) WeaklyTypedOneOfWriteOnlyObject {
	typ := WeaklyTypedOneOfWriteOnlyObjectTypeWriteOnlyObject

	return WeaklyTypedOneOfWriteOnlyObject{
		WriteOnlyObject: &writeOnlyObject,
		Type:            typ,
	}
}

func (u *WeaklyTypedOneOfWriteOnlyObject) UnmarshalJSON(data []byte) error {
	var d *json.Decoder

	writeOnlyObject := new(WriteOnlyObject)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&writeOnlyObject); err == nil {
		u.WriteOnlyObject = writeOnlyObject
		u.Type = WeaklyTypedOneOfWriteOnlyObjectTypeWriteOnlyObject
		return nil
	}

	simpleObject := new(SimpleObject)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&simpleObject); err == nil {
		u.SimpleObject = simpleObject
		u.Type = WeaklyTypedOneOfWriteOnlyObjectTypeSimpleObject
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u WeaklyTypedOneOfWriteOnlyObject) MarshalJSON() ([]byte, error) {
	if u.WriteOnlyObject != nil {
		return json.Marshal(u.WriteOnlyObject)
	}

	if u.SimpleObject != nil {
		return json.Marshal(u.SimpleObject)
	}

	return nil, errors.New("could not marshal union type: all fields are null")

}
