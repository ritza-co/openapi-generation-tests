// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"openapi/pkg/utils"
	"time"
)

type ExampleBoat struct {
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	Length    float64    `json:"length"`
	Name      string     `json:"name"`
	type_     string     `const:"boat" json:"type"`
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

func (e ExampleBoat) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(e, "", false)
}

func (e *ExampleBoat) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &e, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *ExampleBoat) GetCreatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *ExampleBoat) GetLength() float64 {
	if o == nil {
		return 0.0
	}
	return o.Length
}

func (o *ExampleBoat) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *ExampleBoat) GetType() string {
	return "boat"
}

func (o *ExampleBoat) GetUpdatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.UpdatedAt
}
