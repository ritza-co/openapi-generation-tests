# Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

# typed: true
# frozen_string_literal: true

require 'sorbet-runtime'
require 'faraday'

module OpenApiSDK
  module Operations

    class NullableOptionalObj < OpenApiSDK::Utils::FieldAugmented
      extend T::Sig



      
      def initialize; end
    end


    class NullableRequiredObj < OpenApiSDK::Utils::FieldAugmented
      extend T::Sig



      
      def initialize; end
    end


    class RequiredObj < OpenApiSDK::Utils::FieldAugmented
      extend T::Sig



      
      def initialize; end
    end


    class NullableRequiredEmptyObjectPostRequestBody < OpenApiSDK::Utils::FieldAugmented
      extend T::Sig


      field :nullable_required_obj, Operations::NullableRequiredObj, { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('NullableRequiredObj') } }

      field :required_obj, Operations::RequiredObj, { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('RequiredObj') } }

      field :nullable_optional_obj, T.nilable(Operations::NullableOptionalObj), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('NullableOptionalObj') } }


      sig { params(nullable_required_obj: Operations::NullableRequiredObj, required_obj: Operations::RequiredObj, nullable_optional_obj: T.nilable(Operations::NullableOptionalObj)).void }
      def initialize(nullable_required_obj: nil, required_obj: nil, nullable_optional_obj: nil)
        @nullable_required_obj = nullable_required_obj
        @required_obj = required_obj
        @nullable_optional_obj = nullable_optional_obj
      end
    end


    class NullableRequiredEmptyObjectPostResponse < OpenApiSDK::Utils::FieldAugmented
      extend T::Sig

      # HTTP response content type for this operation
      field :content_type, String
      # HTTP response status code for this operation
      field :status_code, Integer
      # Raw HTTP response; suitable for custom response parsing
      field :raw_response, T.nilable(Faraday::Response)
      # OK
      field :res, T.nilable(String)


      sig { params(content_type: String, status_code: Integer, raw_response: T.nilable(Faraday::Response), res: T.nilable(String)).void }
      def initialize(content_type: nil, status_code: nil, raw_response: nil, res: nil)
        @content_type = content_type
        @status_code = status_code
        @raw_response = raw_response
        @res = res
      end
    end
  end
end
