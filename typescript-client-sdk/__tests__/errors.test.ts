/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { expect, test } from "@jest/globals";
import { recordTest } from "./helpers";

import { AxiosError } from "axios";
import { SDK } from "../src/sdk";
import { StatusGetResponse } from "../src/sdk/models/operations";

test("Test Errors 400 Response", async () => {
  recordTest("errors-400-response");

  const sdk = new SDK({});

  const res: StatusGetResponse = await sdk.errors.statusGet(400);

  expect(res).toBeInstanceOf(StatusGetResponse);
  expect(res.statusCode).toBe(400);
});

test("Test Errors Connection Error", async () => {
  recordTest("errors-connection-error");

  const sdk = new SDK({});

  let caught = false;

  try {
    await sdk.errors.connectionErrorGet();
  } catch (err) {
    expect(err).toBeInstanceOf(AxiosError);
    caught = true;
  }

  expect(caught).toBe(true);
});
