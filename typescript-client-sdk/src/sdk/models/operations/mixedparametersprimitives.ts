/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class MixedParametersPrimitivesRequest extends SpeakeasyBase {
    @SpeakeasyMetadata({ data: "header, style=simple;explode=false;name=headerParam" })
    headerParam: string;

    @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=pathParam" })
    pathParam: string;

    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=queryStringParam" })
    queryStringParam: string;
}

export class MixedParametersPrimitivesResArgs extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "queryStringParam" })
    queryStringParam: string;
}

export class MixedParametersPrimitivesResHeaders extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "Headerparam" })
    headerparam: string;
}

/**
 * OK
 */
export class MixedParametersPrimitivesRes extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "args" })
    @Type(() => MixedParametersPrimitivesResArgs)
    args: MixedParametersPrimitivesResArgs;

    @SpeakeasyMetadata()
    @Expose({ name: "headers" })
    @Type(() => MixedParametersPrimitivesResHeaders)
    headers: MixedParametersPrimitivesResHeaders;

    @SpeakeasyMetadata()
    @Expose({ name: "url" })
    url: string;
}

export class MixedParametersPrimitivesResponse extends SpeakeasyBase {
    @SpeakeasyMetadata()
    contentType: string;

    @SpeakeasyMetadata()
    statusCode: number;

    @SpeakeasyMetadata()
    rawResponse?: AxiosResponse;

    /**
     * OK
     */
    @SpeakeasyMetadata()
    res?: MixedParametersPrimitivesRes;
}
