/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class MixedParametersCamelCaseRequest extends SpeakeasyBase {
    @SpeakeasyMetadata({ data: "header, style=simple;explode=false;name=header_param" })
    headerParam: string;

    @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=path_param" })
    pathParam: string;

    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=query_string_param" })
    queryStringParam: string;
}

export class MixedParametersCamelCaseResArgs extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "query_string_param" })
    queryStringParam: string;
}

export class MixedParametersCamelCaseResHeaders extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "Header-Param" })
    headerParam: string;
}

/**
 * OK
 */
export class MixedParametersCamelCaseRes extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "args" })
    @Type(() => MixedParametersCamelCaseResArgs)
    args: MixedParametersCamelCaseResArgs;

    @SpeakeasyMetadata()
    @Expose({ name: "headers" })
    @Type(() => MixedParametersCamelCaseResHeaders)
    headers: MixedParametersCamelCaseResHeaders;

    @SpeakeasyMetadata()
    @Expose({ name: "url" })
    url: string;
}

export class MixedParametersCamelCaseResponse extends SpeakeasyBase {
    /**
     * HTTP response content type for this operation
     */
    @SpeakeasyMetadata()
    contentType: string;

    /**
     * HTTP response status code for this operation
     */
    @SpeakeasyMetadata()
    statusCode: number;

    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    @SpeakeasyMetadata()
    rawResponse?: AxiosResponse;

    /**
     * OK
     */
    @SpeakeasyMetadata()
    res?: MixedParametersCamelCaseRes;
}
