/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { RFCDate } from "../../types";
import { Expose, Transform, Type } from "class-transformer";

export class ObjWithZeroValueComplexTypePtrs extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "bigint" })
    bigint?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "bigintStr" })
    bigintStr?: string;

    /**
     * A date property.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "date" })
    @Type(() => String)
    @Transform(({ value }) => new RFCDate(value), { toClassOnly: true })
    date?: RFCDate;

    /**
     * A date-time property.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "dateTime" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    dateTime?: Date;

    @SpeakeasyMetadata()
    @Expose({ name: "decimal" })
    decimal?: number;
}
